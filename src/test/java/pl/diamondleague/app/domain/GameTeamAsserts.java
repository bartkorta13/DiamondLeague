package pl.diamondleague.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GameTeamAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGameTeamAllPropertiesEquals(GameTeam expected, GameTeam actual) {
        assertGameTeamAutoGeneratedPropertiesEquals(expected, actual);
        assertGameTeamAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGameTeamAllUpdatablePropertiesEquals(GameTeam expected, GameTeam actual) {
        assertGameTeamUpdatableFieldsEquals(expected, actual);
        assertGameTeamUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGameTeamAutoGeneratedPropertiesEquals(GameTeam expected, GameTeam actual) {
        assertThat(expected)
            .as("Verify GameTeam auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGameTeamUpdatableFieldsEquals(GameTeam expected, GameTeam actual) {
        assertThat(expected)
            .as("Verify GameTeam relevant properties")
            .satisfies(e -> assertThat(e.getGoals()).as("check goals").isEqualTo(actual.getGoals()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGameTeamUpdatableRelationshipsEquals(GameTeam expected, GameTeam actual) {
        assertThat(expected)
            .as("Verify GameTeam relationships")
            .satisfies(e -> assertThat(e.getCaptain()).as("check captain").isEqualTo(actual.getCaptain()))
            .satisfies(e -> assertThat(e.getGame()).as("check game").isEqualTo(actual.getGame()));
    }
}
